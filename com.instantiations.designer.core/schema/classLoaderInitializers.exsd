<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.instantiations.designer.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.instantiations.designer.core" id="classLoaderInitializers" name="Initializer for classes from project ClassLoader"/>
      </appinfo>
      <documentation>
         In RCP we use ResourceManager to load images from plugin, using code like this: ResourceManager.getPluginImage(bundleName, path). When we parse code, we can use special ExpressionEvaluator to load image. However when we use this code at design time (for example use some Composite), Platform.getBundle(bundleName) will return null, because plugin is not really loaded. To solve this problem, we have in ResourceManager following code:

 /**
  * Provider for plugin resources, used by WindowBuilder at design time.
  */
 public interface PluginResourceProvider {
  URL getEntry(String symbolicName, String path);
 }
 /**
  * Instance of {@link PluginResourceProvider}, used by WindowBuilder at design time.
  */
 private static PluginResourceProvider m_designTimePluginResourceProvider = null;
 
  // try design time provider
  if (m_designTimePluginResourceProvider != null) {
   return m_designTimePluginResourceProvider.getEntry(symbolicName, path);
  }


So, we need some special way to initialize field m_designTimePluginResourceProvider and this extension point is used to initialize ClassLoader - load ResourceManager and initialize this field.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="initializer"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="initializer">
      <complexType>
         <attribute name="toolkit" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="com.instantiations.designer.core.toolkits/toolkit/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":com.instantiations.designer.core.utils.reflect.IClassLoadingListener"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
